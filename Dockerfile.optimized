# Ultra-optimized multi-stage build for minimal final image size
# Final image: ~5-8MB (vs ~20MB with distroless)

FROM rust:1.83-alpine AS builder

WORKDIR /app

# Install build dependencies for musl target (static linking)
RUN apk add --no-cache \
    musl-dev \
    pkgconfig \
    openssl-dev \
    openssl-libs-static \
    upx

# Copy manifests
COPY Cargo.toml ./

# Create a dummy main.rs to cache dependencies
RUN mkdir src && \
    echo "fn main() {}" > src/main.rs && \
    cargo build --release && \
    rm -rf src

# Copy actual source code
COPY src ./src

# Build the actual application with musl for fully static binary
RUN touch src/main.rs && \
    cargo build --release

# Strip and compress the binary for minimal size
RUN strip /app/target/release/torrentio-debrid-proxy && \
    upx --best --lzma /app/target/release/torrentio-debrid-proxy

# Runtime stage - use scratch for absolute minimum size
FROM scratch

# Copy only the statically-linked binary
COPY --from=builder /app/target/release/torrentio-debrid-proxy /torrentio-debrid-proxy

# Expose the default port
EXPOSE 13470

# Set default environment (these are read at runtime, not build time)
ENV PORT=13470

# Run the binary
ENTRYPOINT ["/torrentio-debrid-proxy"]
